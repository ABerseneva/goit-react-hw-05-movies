{"version":3,"file":"static/js/304.44a53207.chunk.js","mappings":"6KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,0JC5CaE,EAAYC,EAAAA,GAAAA,IAAH,0BAITC,EAAYD,EAAAA,GAAAA,GAAH,kQ,SCqCtB,MAtCA,WACE,OAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGACGR,EAAAA,EAAAA,eADH,OACZS,EADY,OAElBH,EAAaG,EAAOhB,KAAKiB,SAFP,2CAAH,qDAIjBF,GAED,GAAE,KAGD,0BACE,6BACE,4CACA,SAACP,EAAD,WACE,SAACE,EAAD,UACGE,EAAUM,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAOf,EAAsB,EAAtBA,GAAIgB,EAAkB,EAAlBA,YAC3B,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,iBAAYjB,GAApB,WACE,gBACEkB,IAAG,yCAAoCF,EAApC,KACHG,IAAKJ,KAEP,uBAAIA,QANCf,EAUZ,YAMZ,C","sources":["api/moviesApi.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `28b9dff9541e6a7c7078bb12d751dcf6`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;","import styled from 'styled-components';\n\nexport const TrendWrap = styled.div`\n\n`;\n\nexport const MovieList = styled.ul`\n display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import api from '../../api/moviesApi';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TrendWrap, MovieList } from './Home.styled';\n\nfunction Home() {\n  const [moviesDay, setMoviesDay] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const result = await api.getMoviesDay();\n      setMoviesDay(result.data.results);\n    };\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <main>\n        <h1>Trending today</h1>\n        <TrendWrap>\n          <MovieList>\n            {moviesDay.map(({ title, id, poster_path }) => {\n              return (\n                <li key={id}>\n                  <Link to={`movies/${id}`}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w300${poster_path} `}\n                      alt={title}\n                    />\n                    <p>{title}</p>\n                  </Link>\n                </li>\n              );\n            })}\n          </MovieList>\n        </TrendWrap>\n      </main>\n    </div>\n  );\n}\n\nexport default Home;\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","TrendWrap","styled","MovieList","useState","moviesDay","setMoviesDay","useEffect","fetchMovies","result","results","map","title","poster_path","to","src","alt"],"sourceRoot":""}