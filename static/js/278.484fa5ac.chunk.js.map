{"version":3,"file":"static/js/278.484fa5ac.chunk.js","mappings":"6KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,6IC1Ce,SAASE,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcQ,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGACHV,EAAAA,EAAAA,eAAmBL,GADhB,OAClBgB,EADkB,OAExBH,EAAUG,EAAOlB,KAAKmB,SAFE,2CAAH,qDAKvBF,GAED,GAAE,CAACf,KAEJc,EAAAA,EAAAA,YAAU,WACR,IAAMI,EAAW,mCAAG,oGACGb,EAAAA,EAAAA,eADH,OACZW,EADY,OAElBH,EAAUG,EAAOlB,KAAKmB,SAFJ,2CAAH,qDAIjBC,GAED,GAAE,IASH,OACE,4BACE,0BACE,kBAAMC,SAVS,SAAAC,GACnBA,EAAMC,iBACNb,EAASY,EAAME,OAAOC,YAAYC,OAClCb,EAAgB,CAAEX,MAAOoB,EAAME,OAAOC,YAAYC,QAClDJ,EAAME,OAAOG,OACd,EAKK,WACE,kBACEC,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,YAAY,mBAEd,mBAAQF,KAAK,SAASG,UAAU,SAAhC,0BAKJ,wBACGlB,EAAOmB,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAO9B,EAAsB,EAAtBA,GAAI+B,EAAkB,EAAlBA,YACxB,OACE,yBACE,UAAC,KAAD,CAASC,GAAE,UAAKhC,GAAMiC,MAAO,CAAEC,KAAK,WAAD,OAAa1B,IAAhD,WACE,gBACE2B,IACEJ,EAAW,yCAC2BA,EAD3B,6DAIbK,IAAKN,KAEP,6BAAKA,EAAL,WAVK9B,EAcZ,QAIR,C","sources":["api/moviesApi.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `28b9dff9541e6a7c7078bb12d751dcf6`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;","import { useEffect, useState } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport api from '../../api/moviesApi';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      const result = await api.getMoviesQuery(query);\n      setMovies(result.data.results);\n      // console.log(result.data.results);\n    };\n    fetchMovieByQuery();\n    // eslint-disable-next-line\n  }, [query]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const result = await api.getMoviesDay();\n      setMovies(result.data.results);\n    };\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setQuery(event.target.searchfield.value);\n    setSearchParams({ query: event.target.searchfield.value });\n    event.target.reset();\n  };\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            name=\"searchfield\"\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Search movies\"\n          />\n          <button type=\"submit\" className=\"button\">\n            Search\n          </button>\n        </form>\n      </div>\n      <ul>\n        {movies.map(({ title, id, poster_path }) => {\n          return (\n            <li key={id}>\n              <NavLink to={`${id}`} state={{ from: `/movies?${searchParams}` }}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w300${poster_path} `\n                      : `https://static.thenounproject.com/png/1642843-200.png`\n                  }\n                  alt={title}\n                />\n                <p> {title} </p>\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","Movies","useState","setQuery","useSearchParams","searchParams","setSearchParams","movies","setMovies","useEffect","fetchMovieByQuery","result","results","fetchMovies","onSubmit","event","preventDefault","target","searchfield","value","reset","name","type","autoComplete","placeholder","className","map","title","poster_path","to","state","from","src","alt"],"sourceRoot":""}